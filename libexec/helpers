#!/usr/bin/env bash

function error_and_die() {
  echo -e "slsenv: $(basename ${0}): \033[0;31m[ERROR] ${1}\033[0;39m" >&2
  exit 1
}

function warn_and_continue() {
  echo -e "slsenv: $(basename ${0}): \033[0;33m[WARN] ${1}\033[0;39m" >&2
}

function info() {
  echo -e "\033[0;32m[INFO] ${1}\033[0;39m"
}

# Curl wrapper to switch TLS option for each OS
function curlw () {
  local TLS_OPT="--tlsv1.2"

  # Check if curl is 10.12.6 or above
  if [[ -n "$(which sw_vers 2>/dev/null)" && ("$(sw_vers)" =~ 10\.12\.([6-9]|[0-9]{2}) || "$(sw_vers)" =~ 10\.1[3-9]) ]]; then
    TLS_OPT=""
  fi

  curl ${TLS_OPT} "$@"
}

sls_platform() {
  local arch
  case "$(uname -m)" in
    x86_64) arch='amd64';;
    *)      error_and_die "Unrecognized/unsupported architecture $(uname -m)";;
  esac
  local os
  case "$(uname -s)" in
    Darwin*)                      os="darwin";;
    MINGW64*|MSYS_NT*|CYGWIN_NT*) os="windows";;
    Linux*)                       os="linux";;
    *)                            error_and_die "Unrecognized/unsupported kernel $(uname -s)"
  esac
  echo "$os-$arch"
}

